{"ast":null,"code":"import _toConsumableArray from\"D:/skillsafari/New folder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{ADD_CART_ITEM,REMOVE_CART_ITEM,UPDATE_CART_ITEM_COUNT}from\"./action-types\";export default(function(state,action){switch(action.type){case ADD_CART_ITEM:return[].concat(_toConsumableArray(state),[action.payload]);case REMOVE_CART_ITEM:var currrentState=state.filter(function(item){return item.id!==action.payload.id;});return currrentState;case UPDATE_CART_ITEM_COUNT:var index=state.findIndex(function(x){return x.id===action.payload.id;});return[].concat(_toConsumableArray(state.slice(0,index)),[Object.assign(state[index],action.payload)],_toConsumableArray(state.slice(index+1)));default:return state;}});","map":{"version":3,"sources":["D:/skillsafari/New folder/src/Services/Cart/reducer.js"],"names":["ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_CART_ITEM_COUNT","state","action","type","payload","currrentState","filter","item","id","index","findIndex","x","slice","Object","assign"],"mappings":"wJAAA,OAAQA,aAAR,CAAuBC,gBAAvB,CAAyCC,sBAAzC,KAAuE,gBAAvE,CAEA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAkB,CAC7B,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKL,CAAAA,aAAL,CACI,mCAAWG,KAAX,GAAkBC,MAAM,CAACE,OAAzB,GACJ,IAAKL,CAAAA,gBAAL,CACI,GAAIM,CAAAA,aAAa,CAAGJ,KAAK,CAACK,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYN,MAAM,CAACE,OAAP,CAAeI,EAA/B,EAAjB,CAApB,CACA,MAAOH,CAAAA,aAAP,CACJ,IAAKL,CAAAA,sBAAL,CACI,GAAIS,CAAAA,KAAK,CAAGR,KAAK,CAACS,SAAN,CAAgB,SAAAC,CAAC,QAAGA,CAAAA,CAAC,CAACH,EAAF,GAASN,MAAM,CAACE,OAAP,CAAeI,EAA3B,EAAjB,CAAZ,CACA,mCAAWP,KAAK,CAACW,KAAN,CAAY,CAAZ,CAAcH,KAAd,CAAX,GACAI,MAAM,CAACC,MAAP,CAAeb,KAAK,CAACQ,KAAD,CAApB,CAA6BP,MAAM,CAACE,OAApC,CADA,qBAEGH,KAAK,CAACW,KAAN,CAAYH,KAAK,CAAC,CAAlB,CAFH,GAGJ,QACI,MAAOR,CAAAA,KAAP,CAZR,CAcH,CAfD","sourcesContent":["import {ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_CART_ITEM_COUNT } from \"./action-types\";\n\nexport default (state, action) =>{\n    switch(action.type){\n        case ADD_CART_ITEM:\n            return [...state, action.payload];\n        case REMOVE_CART_ITEM:\n            let currrentState=  state.filter(item => item.id !== action.payload.id);\n            return currrentState;\n        case UPDATE_CART_ITEM_COUNT:\n            var index = state.findIndex(x=> x.id === action.payload.id);\n            return [...state.slice(0,index),\n            Object.assign( state[index], action.payload),\n            ...state.slice(index+1)]\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}